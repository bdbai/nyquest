[workspace]
members = [
    "nyquest-interface",
    "nyquest-backend-tests",
    "backends/*",
    "examples/*",
    "presets/*",
]
resolver = "2"

[workspace.package]
authors = ["bdbai <bdbaiapp@163.com>"]
categories = ["web-programming::http-client"]
edition = "2021"
keywords = ["http", "client", "native", "winhttp", "nsurlsession"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/bdbai/nyquest"
rust-version = "1.80"
exclude = [".vscode/*", ".github/*", "examples/README.md", "rustfmt.toml"]

[workspace.dependencies]
futures = "0.3.31"
thiserror = "2"
cfg-if = "1"
arc-swap = "1"

[workspace.lints.rust]
# unsafe_code = "deny"
deprecated = "warn"
elided_lifetimes_in_paths = "warn"
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"                         # `unsafe_op_in_unsafe_fn` may become the default in future Rust versions: https://github.com/rust-lang/rust/issues/71668
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"

# [lints.rustdoc]
# all = "warn"
# missing_crate_level_docs = "warn"

[workspace.lints.clippy]
all = "warn"
correctness = "warn"
suspicious = "warn"
style = "warn"
complexity = "warn"
perf = "warn"
# pedantic = "warn"
# nursery = "warn"

# Additional lints from https://rust-lang.github.io/rust-clippy/master/index.html?groups=restriction
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
assertions_on_result_states = "warn"
create_dir = "warn"
clone_on_ref_ptr = "warn"
expect_used = "warn"
missing_assert_message = "warn"
panic_in_result_fn = "warn"
str_to_string = "warn"
todo = "warn"
unwrap_used = "warn"
unimplemented = "warn"
wildcard_enum_match_arm = "warn"

[package]
name = "nyquest"
description = "truly native HTTP client library"
version = "0.1.0"
authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
exclude.workspace = true

[package.metadata.docs.rs]
features = ["async", "blocking", "multipart", "json"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
async = ["nyquest-interface/async"]
blocking = ["nyquest-interface/blocking"]
multipart = ["nyquest-interface/multipart"]
json = ["dep:serde", "dep:serde_json"]

[dependencies]
nyquest-interface = { version = "0.1.0", path = "nyquest-interface", default-features = false }
thiserror.workspace = true

serde = { version = "1", optional = true }
serde_json = { version = "1.0.140", optional = true }

[lints]
workspace = true
